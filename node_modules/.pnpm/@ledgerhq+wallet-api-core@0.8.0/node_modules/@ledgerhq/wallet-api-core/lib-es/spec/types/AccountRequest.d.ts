import { z } from "zod";
declare const schemaAccountRequestParams: z.ZodObject<{
    currencyIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strip", z.ZodTypeAny, {
    currencyIds?: string[] | undefined;
}, {
    currencyIds?: string[] | undefined;
}>;
declare const schemaAccountRequestResults: z.ZodObject<{
    rawAccount: z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        address: z.ZodString;
        currency: z.ZodString;
        balance: z.ZodString;
        spendableBalance: z.ZodString;
        blockHeight: z.ZodNumber;
        lastSyncDate: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        name: string;
        address: string;
        currency: string;
        balance: string;
        spendableBalance: string;
        blockHeight: number;
        lastSyncDate: string;
    }, {
        id: string;
        name: string;
        address: string;
        currency: string;
        balance: string;
        spendableBalance: string;
        blockHeight: number;
        lastSyncDate: string;
    }>;
}, "strip", z.ZodTypeAny, {
    rawAccount: {
        id: string;
        name: string;
        address: string;
        currency: string;
        balance: string;
        spendableBalance: string;
        blockHeight: number;
        lastSyncDate: string;
    };
}, {
    rawAccount: {
        id: string;
        name: string;
        address: string;
        currency: string;
        balance: string;
        spendableBalance: string;
        blockHeight: number;
        lastSyncDate: string;
    };
}>;
export declare const schemaAccountRequest: {
    params: z.ZodObject<{
        currencyIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        currencyIds?: string[] | undefined;
    }, {
        currencyIds?: string[] | undefined;
    }>;
    result: z.ZodObject<{
        rawAccount: z.ZodObject<{
            id: z.ZodString;
            name: z.ZodString;
            address: z.ZodString;
            currency: z.ZodString;
            balance: z.ZodString;
            spendableBalance: z.ZodString;
            blockHeight: z.ZodNumber;
            lastSyncDate: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            id: string;
            name: string;
            address: string;
            currency: string;
            balance: string;
            spendableBalance: string;
            blockHeight: number;
            lastSyncDate: string;
        }, {
            id: string;
            name: string;
            address: string;
            currency: string;
            balance: string;
            spendableBalance: string;
            blockHeight: number;
            lastSyncDate: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        rawAccount: {
            id: string;
            name: string;
            address: string;
            currency: string;
            balance: string;
            spendableBalance: string;
            blockHeight: number;
            lastSyncDate: string;
        };
    }, {
        rawAccount: {
            id: string;
            name: string;
            address: string;
            currency: string;
            balance: string;
            spendableBalance: string;
            blockHeight: number;
            lastSyncDate: string;
        };
    }>;
};
export declare type AccountRequest = {
    params: z.infer<typeof schemaAccountRequestParams>;
    result: z.infer<typeof schemaAccountRequestResults>;
};
export declare type AccountRequestHandler = (params: AccountRequest["params"]) => AccountRequest["result"];
export {};
//# sourceMappingURL=AccountRequest.d.ts.map