import { z } from "zod";
export declare const schemaPolkadotOperationMode: z.ZodEnum<["send", "bond", "unbond", "rebond", "withdrawUnbonded", "setController", "nominate", "chill", "claimReward"]>;
export declare const schemaRawPolkadotTransaction: z.ZodObject<z.extendShape<{
    amount: z.ZodString;
    recipient: z.ZodString;
}, {
    family: z.ZodLiteral<"polkadot">;
    mode: z.ZodEnum<["send", "bond", "unbond", "rebond", "withdrawUnbonded", "setController", "nominate", "chill", "claimReward"]>;
    fee: z.ZodOptional<z.ZodString>;
    era: z.ZodOptional<z.ZodNumber>;
}>, "strip", z.ZodTypeAny, {
    fee?: string | undefined;
    era?: number | undefined;
    amount: string;
    recipient: string;
    family: "polkadot";
    mode: "send" | "claimReward" | "bond" | "unbond" | "rebond" | "withdrawUnbonded" | "setController" | "nominate" | "chill";
}, {
    fee?: string | undefined;
    era?: number | undefined;
    amount: string;
    recipient: string;
    family: "polkadot";
    mode: "send" | "claimReward" | "bond" | "unbond" | "rebond" | "withdrawUnbonded" | "setController" | "nominate" | "chill";
}>;
//# sourceMappingURL=validation.d.ts.map