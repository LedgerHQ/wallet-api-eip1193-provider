"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.schemaDeviceTransport = void 0;
const zod_1 = require("zod");
const schemaDeviceType = zod_1.z.enum([
    "blue",
    "nanoS",
    "nanoSP",
    "nanoX",
    "nanoFTS",
]);
const schemaDeviceTransportParams = zod_1.z.object({
    /** Select the BOLOS App. If undefined selects BOLOS */
    appName: zod_1.z.string().optional(),
    /**
     * Checks the BOLOS App version range. If undefined no checks
     * Can be any ranges supported here: https://github.com/npm/node-semver#ranges
     */
    appVersionRange: zod_1.z.string().optional(),
    /**
     * Checks the BOLOS Firmware version range. If undefined no checks
     * Can be any ranges supported here: https://github.com/npm/node-semver#ranges
     */
    firmwareVersionRange: zod_1.z.string().optional(),
    /**
     * Checks if the device is seeded. If undefined no checks
     */
    seeded: zod_1.z.boolean().optional(),
    /**
     * Checks if the device matches one of the types. If undefined no checks
     */
    devices: schemaDeviceType.array().nonempty().optional(),
});
const schemaDeviceTransportResults = zod_1.z.object({
    transportId: zod_1.z.string(),
});
exports.schemaDeviceTransport = {
    params: schemaDeviceTransportParams,
    result: schemaDeviceTransportResults,
};
