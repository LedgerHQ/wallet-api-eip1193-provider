/// <reference types="node" />
export declare type Promisable<T> = T | PromiseLike<T>;
/**
 * Metadata used to describe a secure exchange between a Ledger device
 * and a partner (for sell, swap and funding)
 * @ref: https://github.com/LedgerHQ/app-exchange/blob/master/src/proto/protocol.proto
 */
export declare type ExchangePayload = Buffer;
/**
 * The ECDSA signature of the [[ExchangePayload | payload]]
 */
export declare type EcdsaSignature = Buffer;
/**
 * A transaction ID used to complete the exchange process
 */
export declare type ExchangeDeviceTxId = string;
/**
 * Abstract level of fees for a transaction
 */
export declare enum FeesLevel {
    Slow = "slow",
    Medium = "medium",
    Fast = "fast"
}
export declare enum DeviceModel {
    /**
     * Represents the Ledger Blue hardware device
     */
    Blue = "blue",
    /**
     * Represents the Ledger Nano S hardware device
     */
    NanoS = "nanoS",
    /**
     * Represents the Ledger Nano X hardware device
     */
    NanoX = "nanoX"
}
/**
 * Information about a device
 */
export declare type DeviceInfo = {
    /**
     * The [[DeviceModel | model]] of the device
     */
    modelId: DeviceModel;
    /**
     * The version of the firmware
     */
    version: string;
};
/**
 * Enum describing the different types of exchanges.
 */
export declare enum ExchangeType {
    SWAP = 0,
    SELL = 1,
    FUND = 2
}
/**
 * Informations about a device application
 */
export declare type ApplicationDetails = {
    /**
     * Name of the application
     */
    name: string;
    /**
     * Version of the application (SemVer)
     */
    version: string;
};
export declare type Permission = {
    currencyIds: string[];
    methodIds: string[];
};
//# sourceMappingURL=index.d.ts.map