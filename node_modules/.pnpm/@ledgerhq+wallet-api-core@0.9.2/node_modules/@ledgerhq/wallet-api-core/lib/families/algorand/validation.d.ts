import { z } from "zod";
export declare const schemaAlgorandOperationMode: z.ZodEnum<["send", "optIn", "claimReward", "optOut"]>;
export declare const schemaRawAlgorandTransaction: z.ZodObject<z.extendShape<{
    amount: z.ZodString;
    recipient: z.ZodString;
}, {
    family: z.ZodLiteral<"algorand">;
    mode: z.ZodEnum<["send", "optIn", "claimReward", "optOut"]>;
    fees: z.ZodOptional<z.ZodString>;
    assetId: z.ZodOptional<z.ZodString>;
    memo: z.ZodOptional<z.ZodString>;
}>, "strip", z.ZodTypeAny, {
    fees?: string | undefined;
    assetId?: string | undefined;
    memo?: string | undefined;
    amount: string;
    recipient: string;
    family: "algorand";
    mode: "send" | "optIn" | "claimReward" | "optOut";
}, {
    fees?: string | undefined;
    assetId?: string | undefined;
    memo?: string | undefined;
    amount: string;
    recipient: string;
    family: "algorand";
    mode: "send" | "optIn" | "claimReward" | "optOut";
}>;
//# sourceMappingURL=validation.d.ts.map