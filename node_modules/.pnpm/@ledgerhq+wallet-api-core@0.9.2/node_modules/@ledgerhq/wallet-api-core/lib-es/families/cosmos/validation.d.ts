import { z } from "zod";
export declare const schemaCosmosOperationMode: z.ZodEnum<["send", "delegate", "undelegate", "redelegate", "claimReward", "claimRewardCompound"]>;
export declare const schemaRawCosmosTransaction: z.ZodObject<z.extendShape<{
    amount: z.ZodString;
    recipient: z.ZodString;
}, {
    family: z.ZodLiteral<"cosmos">;
    mode: z.ZodEnum<["send", "delegate", "undelegate", "redelegate", "claimReward", "claimRewardCompound"]>;
    fees: z.ZodOptional<z.ZodString>;
    gas: z.ZodOptional<z.ZodString>;
    memo: z.ZodOptional<z.ZodString>;
}>, "strip", z.ZodTypeAny, {
    fees?: string | undefined;
    memo?: string | undefined;
    gas?: string | undefined;
    amount: string;
    recipient: string;
    family: "cosmos";
    mode: "send" | "claimReward" | "delegate" | "undelegate" | "redelegate" | "claimRewardCompound";
}, {
    fees?: string | undefined;
    memo?: string | undefined;
    gas?: string | undefined;
    amount: string;
    recipient: string;
    family: "cosmos";
    mode: "send" | "claimReward" | "delegate" | "undelegate" | "redelegate" | "claimRewardCompound";
}>;
//# sourceMappingURL=validation.d.ts.map